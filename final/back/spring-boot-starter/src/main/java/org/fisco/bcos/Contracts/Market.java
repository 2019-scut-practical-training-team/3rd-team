package org.fisco.bcos.Contracts;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.fisco.bcos.channel.client.TransactionSucCallback;
import org.fisco.bcos.web3j.abi.TypeReference;
import org.fisco.bcos.web3j.abi.datatypes.Address;
import org.fisco.bcos.web3j.abi.datatypes.DynamicArray;
import org.fisco.bcos.web3j.abi.datatypes.Function;
import org.fisco.bcos.web3j.abi.datatypes.Type;
import org.fisco.bcos.web3j.abi.datatypes.Utf8String;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint16;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint256;
import org.fisco.bcos.web3j.abi.datatypes.generated.Uint8;
import org.fisco.bcos.web3j.crypto.Credentials;
import org.fisco.bcos.web3j.protocol.Web3j;
import org.fisco.bcos.web3j.protocol.core.RemoteCall;
import org.fisco.bcos.web3j.protocol.core.methods.response.TransactionReceipt;
import org.fisco.bcos.web3j.tuples.generated.Tuple2;
import org.fisco.bcos.web3j.tuples.generated.Tuple7;
import org.fisco.bcos.web3j.tx.Contract;
import org.fisco.bcos.web3j.tx.TransactionManager;
import org.fisco.bcos.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.fisco.bcos.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version none.
 */
@SuppressWarnings("unchecked")
public class Market extends Contract {
    public static final String BINARY = "6080604052600160025534801561001557600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600860008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555061506e806100df6000396000f30060806040526004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630e2b232014610122578063149291541461018e57806325ad91ce1461031d578063291607e8146103345780632fa6c31b146103dd57806345a721291461040857806345c84486146104d1578063526718c7146105145780636240cda6146105a557806369aeddec146106095780639189eef814610675578063997c682e1461071857806399c7fa8e1461098a578063a396fa07146109f3578063b23983d914610aa2578063c03f7d6614610b48578063d9021bb914610c11578063dcc9170514610d5a578063f8b2cb4f14610d8b578063faf3795914610de2578063ff74927b14610e4b575b600080fd5b34801561012e57600080fd5b50610137610f73565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561017a57808201518184015260208101905061015f565b505050509050019250505060405180910390f35b34801561019a57600080fd5b5061031b600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803561ffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050611112565b005b34801561032957600080fd5b5061033261163f565b005b34801561034057600080fd5b5061039b600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506118ad565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156103e957600080fd5b506103f2611ba4565b6040518082815260200191505060405180910390f35b34801561041457600080fd5b506104cf600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611beb565b005b3480156104dd57600080fd5b50610512600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f96565b005b34801561052057600080fd5b506105a3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803561ffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612037565b005b3480156105b157600080fd5b506105ba612357565b604051808360ff1660ff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b34801561061557600080fd5b5061061e6123b0565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610661578082015181840152602081019050610646565b505050509050019250505060405180910390f35b34801561068157600080fd5b506106fc600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506124d9565b604051808260ff1660ff16815260200191505060405180910390f35b34801561072457600080fd5b5061074360048036038101908080359060200190929190505050612837565b6040518080602001806020018861ffff1661ffff168152602001806020018760ff1660ff168152602001806020018060200186810386528d818151815260200191508051906020019080838360005b838110156107ad578082015181840152602081019050610792565b50505050905090810190601f1680156107da5780820380516001836020036101000a031916815260200191505b5086810385528c818151815260200191508051906020019080838360005b838110156108135780820151818401526020810190506107f8565b50505050905090810190601f1680156108405780820380516001836020036101000a031916815260200191505b5086810384528a818151815260200191508051906020019080838360005b8381101561087957808201518184015260208101905061085e565b50505050905090810190601f1680156108a65780820380516001836020036101000a031916815260200191505b50868103835288818151815260200191508051906020019080838360005b838110156108df5780820151818401526020810190506108c4565b50505050905090810190601f16801561090c5780820380516001836020036101000a031916815260200191505b50868103825287818151815260200191508051906020019080838360005b8381101561094557808201518184015260208101905061092a565b50505050905090810190601f1680156109725780820380516001836020036101000a031916815260200191505b509c5050505050505050505050505060405180910390f35b34801561099657600080fd5b506109f1600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050612e29565b005b3480156109ff57600080fd5b50610aa0600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050613401565b005b348015610aae57600080fd5b50610acd60048036038101908080359060200190929190505050613b5e565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b0d578082015181840152602081019050610af2565b50505050905090810190601f168015610b3a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610b5457600080fd5b50610bcf600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613e55565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610c1d57600080fd5b50610d58600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803561ffff169060200190929190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061414d565b005b348015610d6657600080fd5b50610d6f614449565b604051808260ff1660ff16815260200191505060405180910390f35b348015610d9757600080fd5b50610dcc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061449d565b6040518082815260200191505060405180910390f35b348015610dee57600080fd5b50610e49600480360381019080803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091929192905050506144e6565b005b348015610e5757600080fd5b50610ef8600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050614913565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f38578082015181840152602081019050610f1d565b50505050905090810190601f168015610f655780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6060600080606060009250600091505b60038054905082101561101a573373ffffffffffffffffffffffffffffffffffffffff16600383815481101515610fb657fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561100d5782806001019350505b8180600101925050610f83565b826040519080825280602002602001820160405280156110495781602001602082028038833980820191505090505b50905060009250600091505b600380549050821015611109573373ffffffffffffffffffffffffffffffffffffffff1660038381548110151561108857fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156110fc578181848151811015156110e557fe5b906020019060200201818152505082806001019350505b8180600101925050611055565b80935050505090565b60003373ffffffffffffffffffffffffffffffffffffffff166007886040518082805190602001908083835b602083101515611163578051825260208201915060208101905060208303925061113e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611268576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f596f7520617265206e6f7420746865206f776e6572206f66207468697320706581526020017f742100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600090505b60038054905081101561163657866040516020018082805190602001908083835b6020831015156112b3578051825260208201915060208101905060208303925061128e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561131c57805182526020820191506020810190506020830392506112f7565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191660038281548110151561135c57fe5b906000526020600020906007020160010160405160200180828054600181600116156101000203166002900480156113cb5780601f106113a95761010080835404028352918201916113cb565b820191906000526020600020905b8154815290600101906020018083116113b7575b50509150506040516020818303038152906040526040518082805190602001908083835b60208310151561141457805182526020820191506020810190506020830392506113ef565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141561162957600060038281548110151561145c57fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16141515611519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001807f596f752063616e206e6f74206368616e6765206974277320696e666f2062656381526020017f617573652069742773206f6e2073656c6c00000000000000000000000000000081525060400191505060405180910390fd5b8560038281548110151561152957fe5b9060005260206000209060070201600001908051906020019061154d929190614ef4565b508460038281548110151561155e57fe5b90600052602060002090600702016002019080519060200190611582929190614ef4565b508360038281548110151561159357fe5b906000526020600020906007020160030160006101000a81548161ffff021916908361ffff160217905550826003828154811015156115ce57fe5b906000526020600020906007020160040190805190602001906115f2929190614ef4565b508160038281548110151561160357fe5b90600052602060002090600702016005019080519060200190611627929190614ef4565b505b808060010191505061126d565b50505050505050565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141515611706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f596f7520617265206f6c6420757365722100000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515156117f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f596f75206172652061646d696e6973747261746f722c20796f7520686176652081526020017f6163636f756e742100000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6117f9614ae4565b6001600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506001600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550565b600080600090505b600380549050811015611b9d57826040516020018082805190602001908083835b6020831015156118fb57805182526020820191506020810190506020830392506118d6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515611964578051825260208201915060208101905060208303925061193f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019166003828154811015156119a457fe5b90600052602060002090600702016001016040516020018082805460018160011615610100020316600290048015611a135780601f106119f1576101008083540402835291820191611a13565b820191906000526020600020905b8154815290600101906020018083116119ff575b50509150506040516020818303038152906040526040518082805190602001908083835b602083101515611a5c5780518252602082019150602081019050602083039250611a37565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415611b9057600381815481101515611aa257fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611b3d57506001600382815481101515611b1957fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16145b1515611b4857600080fd5b600381815481101515611b5757fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150611b9e565b80806001019150506118b5565b5b50919050565b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611c4957600080fd5b60008673ffffffffffffffffffffffffffffffffffffffff1614151515611c6f57600080fd5b8573ffffffffffffffffffffffffffffffffffffffff166007856040518082805190602001908083835b602083101515611cbe5780518252602082019150602081019050602083039250611c99565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611d3457600080fd5b611d3e8486614b85565b600091505b600380549050821015611f8e57600382815481101515611d5f57fe5b90600052602060002090600702016001016040516020018082805460018160011615610100020316600290048015611dce5780601f10611dac576101008083540402835291820191611dce565b820191906000526020600020905b815481529060010190602001808311611dba575b50509150506040516020818303038152906040526040518082805190602001908083835b602083101515611e175780518252602082019150602081019050602083039250611df2565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916846040516020018082805190602001908083835b602083101515611e815780518252602082019150602081019050602083039250611e5c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515611eea5780518252602082019150602081019050602083039250611ec5565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415611f815784600383815481101515611f3157fe5b906000526020600020906007020160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8180600101925050611d43565b505050505050565b336000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515611ff257600080fd5b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000816000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151561209557600080fd5b60008573ffffffffffffffffffffffffffffffffffffffff16141515156120bb57600080fd5b8361ffff16600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561210d57600080fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548461ffff16600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540111151561219f57600080fd5b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540191508361ffff16600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508361ffff16600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555081600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540114151561234f57fe5b505050505050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1633915091509091565b6060600080606060009250600091505b60038054905082101561241c5760016003838154811015156123de57fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16141561240f5782806001019350505b81806001019250506123c0565b8260405190808252806020026020018201604052801561244b5781602001602082028038833980820191505090505b50905060009250600091505b6003805490508210156124d057600160038381548110151561247557fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff1614156124c3578181848151811015156124ac57fe5b906020019060200201818152505082806001019350505b8180600101925050612457565b80935050505090565b6000808273ffffffffffffffffffffffffffffffffffffffff166007856040518082805190602001908083835b60208310151561252b5780518252602082019150602081019050602083039250612506565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561260a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f596f7520617265206e6f7420746865206f776e206f662074686973207065742181525060200191505060405180910390fd5b600090505b60038054905081101561282f5760038181548110151561262b57fe5b9060005260206000209060070201600101604051602001808280546001816001161561010002031660029004801561269a5780601f1061267857610100808354040283529182019161269a565b820191906000526020600020905b815481529060010190602001808311612686575b50509150506040516020818303038152906040526040518082805190602001908083835b6020831015156126e357805182526020820191506020810190506020830392506126be565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916846040516020018082805190602001908083835b60208310151561274d5780518252602082019150602081019050602083039250612728565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156127b65780518252602082019150602081019050602083039250612791565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415612822576003818154811015156127fc57fe5b906000526020600020906007020160030160029054906101000a900460ff169150612830565b808060010191505061260f565b5b5092915050565b60608060006060600060608060016003805490500388111515156128c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5468697320696e646578206973206f7574206f662072616e676521000000000081525060200191505060405180910390fd5b6003888154811015156128d257fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061296d5750600160038981548110151561294957fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16145b1515612a07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f596f752063616e206e6f742073656520696e666f726d6174696f6e2061626f7581526020017f742074686973207065742100000000000000000000000000000000000000000081525060400191505060405180910390fd5b600388815481101515612a1657fe5b9060005260206000209060070201600101600389815481101515612a3657fe5b906000526020600020906007020160020160038a815481101515612a5657fe5b906000526020600020906007020160030160009054906101000a900461ffff1660038b815481101515612a8557fe5b906000526020600020906007020160000160038c815481101515612aa557fe5b906000526020600020906007020160030160029054906101000a900460ff1660038d815481101515612ad357fe5b906000526020600020906007020160040160038e815481101515612af357fe5b9060005260206000209060070201600501868054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612b995780601f10612b6e57610100808354040283529160200191612b99565b820191906000526020600020905b815481529060010190602001808311612b7c57829003601f168201915b50505050509650858054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612c355780601f10612c0a57610100808354040283529160200191612c35565b820191906000526020600020905b815481529060010190602001808311612c1857829003601f168201915b50505050509550838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612cd15780601f10612ca657610100808354040283529160200191612cd1565b820191906000526020600020905b815481529060010190602001808311612cb457829003601f168201915b50505050509350818054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612d6d5780601f10612d4257610100808354040283529160200191612d6d565b820191906000526020600020905b815481529060010190602001808311612d5057829003601f168201915b50505050509150808054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015612e095780601f10612dde57610100808354040283529160200191612e09565b820191906000526020600020905b815481529060010190602001808311612dec57829003601f168201915b505050505090509650965096509650965096509650919395979092949650565b60003373ffffffffffffffffffffffffffffffffffffffff166007836040518082805190602001908083835b602083101515612e7a5780518252602082019150602081019050602083039250612e55565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515612f7f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f596f7520617265206e6f7420746865206f776e6572206f66207468697320706581526020017f742100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4fe516f846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561302b578082015181840152602081019050613010565b50505050905090810190601f1680156130585780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561307757600080fd5b505af115801561308b573d6000803e3d6000fd5b505050506040513d60208110156130a157600080fd5b810190808051906020019092919050505060ff1614151561312a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f596f757220706574206973206f6e2072657475726e210000000000000000000081525060200191505060405180910390fd5b600090505b6003805490508110156133fd5760038181548110151561314b57fe5b906000526020600020906007020160010160405160200180828054600181600116156101000203166002900480156131ba5780601f106131985761010080835404028352918201916131ba565b820191906000526020600020905b8154815290600101906020018083116131a6575b50509150506040516020818303038152906040526040518082805190602001908083835b60208310151561320357805182526020820191506020810190506020830392506131de565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916826040516020018082805190602001908083835b60208310151561326d5780518252602082019150602081019050602083039250613248565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156132d657805182526020820191506020810190506020830392506132b1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614156133f057600060038281548110151561331e57fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff161415156133b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5468697320706574206973206f6e2073656c6c2100000000000000000000000081525060200191505060405180910390fd5b60016003828154811015156133c657fe5b906000526020600020906007020160030160026101000a81548160ff021916908360ff1602179055505b808060010191505061312f565b5050565b60008090505b600380549050811015613b595760038181548110151561342357fe5b906000526020600020906007020160010160405160200180828054600181600116156101000203166002900480156134925780601f10613470576101008083540402835291820191613492565b820191906000526020600020905b81548152906001019060200180831161347e575b50509150506040516020818303038152906040526040518082805190602001908083835b6020831015156134db57805182526020820191506020810190506020830392506134b6565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916836040516020018082805190602001908083835b6020831015156135455780518252602082019150602081019050602083039250613520565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156135ae5780518252602082019150602081019050602083039250613589565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019161415613b4c573373ffffffffffffffffffffffffffffffffffffffff1660038281548110151561360b57fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515156136c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f596f752063616e27742062757920796f7572207065742100000000000000000081525060200191505060405180910390fd5b60016003828154811015156136da57fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16141515613771576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5468697320706574206973206e6f74206f6e2073656c6c21000000000000000081525060200191505060405180910390fd5b6137ea3360038381548110151561378457fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166003848154811015156137c557fe5b906000526020600020906007020160030160009054906101000a900461ffff16614c33565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635715be713360038481548110151561383857fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858760038781548110151561387b57fe5b906000526020600020906007020160030160009054906101000a900461ffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518763ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001806020018561ffff1661ffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b838110156139d05780820151818401526020810190506139b5565b50505050905090810190601f1680156139fd5780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b83811015613a36578082015181840152602081019050613a1b565b50505050905090810190601f168015613a635780820380516001836020036101000a031916815260200191505b5098505050505050505050600060405180830381600087803b158015613a8857600080fd5b505af1158015613a9c573d6000803e3d6000fd5b50505050613b0d600382815481101515613ab257fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633856000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16611beb565b6000600382815481101515613b1e57fe5b906000526020600020906007020160030160026101000a81548160ff021916908360ff160217905550613b59565b8080600101915050613407565b505050565b6060613b68614f74565b60606000610140604051908101604052806040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f320000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f330000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f340000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f350000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f360000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f370000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f380000000000000000000000000000000000000000000000000000000000000081525081526020016040805190810160405280600181526020017f3900000000000000000000000000000000000000000000000000000000000000815250815250925084905082600a8083811515613dd857fe5b04028203600a81101515613de857fe5b60200201519150600a81811515613dfb57fe5b0490505b6000811115613e4a57613e3483600a8084811515613e1957fe5b04028303600a81101515613e2957fe5b602002015183614913565b9150600a81811515613e4257fe5b049050613dff565b819350505050919050565b600080600090505b60038054905081101561414557836040516020018082805190602001908083835b602083101515613ea35780518252602082019150602081019050602083039250613e7e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515613f0c5780518252602082019150602081019050602083039250613ee7565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916600382815481101515613f4c57fe5b90600052602060002090600702016001016040516020018082805460018160011615610100020316600290048015613fbb5780601f10613f99576101008083540402835291820191613fbb565b820191906000526020600020905b815481529060010190602001808311613fa7575b50509150506040516020818303038152906040526040518082805190602001908083835b6020831015156140045780518252602082019150602081019050602083039250613fdf565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206000191614156141385760038181548110151561404a57fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614806140e5575060016003828154811015156140c157fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff16145b15156140f057600080fd5b6003818154811015156140ff57fe5b906000526020600020906007020160060160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150614146565b8080600101915050613e5d565b5b5092915050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1660ff16141515614214576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f596f75206861766520616c72656479206372656174656420612070657421000081525060200191505060405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555060036101006040519081016040528085815260200161428d600254613b5e565b81526020018781526020018661ffff168152602001600060ff1681526020018481526020018381526020013373ffffffffffffffffffffffffffffffffffffffff16815250908060018154018082558091505090600182039060005260206000209060070201600090919290919091506000820151816000019080519060200190614319929190614f9d565b506020820151816001019080519060200190614336929190614f9d565b506040820151816002019080519060200190614353929190614f9d565b5060608201518160030160006101000a81548161ffff021916908361ffff16021790555060808201518160030160026101000a81548160ff021916908360ff16021790555060a08201518160040190805190602001906143b4929190614f9d565b5060c08201518160050190805190602001906143d1929190614f9d565b5060e08201518160060160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061443061442a600254613b5e565b33614b85565b6002600081548092919060010191905055505050505050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60003373ffffffffffffffffffffffffffffffffffffffff166007836040518082805190602001908083835b6020831015156145375780518252602082019150602081019050602083039250614512565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561463c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f596f7520617265206e6f7420746865206f776e6572206f66207468697320706581526020017f742100000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600090505b60038054905081101561490f5760038181548110151561465d57fe5b906000526020600020906007020160010160405160200180828054600181600116156101000203166002900480156146cc5780601f106146aa5761010080835404028352918201916146cc565b820191906000526020600020905b8154815290600101906020018083116146b8575b50509150506040516020818303038152906040526040518082805190602001908083835b60208310151561471557805182526020820191506020810190506020830392506146f0565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916826040516020018082805190602001908083835b60208310151561477f578051825260208201915060208101905060208303925061475a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156147e857805182526020820191506020810190506020830392506147c3565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902060001916141561490257600160038281548110151561483057fe5b906000526020600020906007020160030160029054906101000a900460ff1660ff161415156148c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f5468697320706574206973206e6f74206f6e2073656c6c21000000000000000081525060200191505060405180910390fd5b60006003828154811015156148d857fe5b906000526020600020906007020160030160026101000a81548160ff021916908360ff1602179055505b8080600101915050614641565b5050565b606080606080606060008088955087945084518651016040519080825280601f01601f19166020018201604052801561495b5781602001602082028038833980820191505090505b50935083925060009150600090505b8551811015614a1d57858181518110151561498157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156149e057fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061496a565b600090505b8451811015614ad5578481815181101515614a3957fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028383806001019450815181101515614a9857fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050614a22565b83965050505050505092915050565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff160217905550612710600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b806007836040518082805190602001908083835b602083101515614bbe5780518252602082019150602081019050602083039250614b99565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1614151515614c5a57600080fd5b8161ffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515614cac57600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261ffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401111515614d3e57600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540190508161ffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055508161ffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555080600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401141515614eee57fe5b50505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614f3557805160ff1916838001178555614f63565b82800160010185558215614f63579182015b82811115614f62578251825591602001919060010190614f47565b5b509050614f70919061501d565b5090565b61014060405190810160405280600a905b6060815260200190600190039081614f855790505090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10614fde57805160ff191683800117855561500c565b8280016001018555821561500c579182015b8281111561500b578251825591602001919060010190614ff0565b5b509050615019919061501d565b5090565b61503f91905b8082111561503b576000816000905550600101615023565b5090565b905600a165627a7a7230582003a9b4855292c6d4ead111808ef63a406292f22f449fec002ae74cdc6bd859530029";

    public static final String ABI = "[{\"constant\":true,\"inputs\":[],\"name\":\"getPetIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_type\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint16\"},{\"name\":\"_img\",\"type\":\"string\"},{\"name\":\"_intro\",\"type\":\"string\"}],\"name\":\"changePetInfo\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"createUser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"}],\"name\":\"getPetOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBalanceOfMe\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_petId\",\"type\":\"string\"},{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"changePetOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_orderAddress\",\"type\":\"address\"}],\"name\":\"setOrderAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_price\",\"type\":\"uint16\"},{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"payByAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUserIden\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"showPetOnSell\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"},{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"getPetStatus\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getPetByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint16\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"string\"},{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"}],\"name\":\"sellPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"},{\"name\":\"_time\",\"type\":\"string\"}],\"name\":\"buyPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_input\",\"type\":\"uint256\"}],\"name\":\"getIntToString\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"},{\"name\":\"_caller\",\"type\":\"address\"}],\"name\":\"orderGetPetOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_type\",\"type\":\"string\"},{\"name\":\"_price\",\"type\":\"uint16\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_img\",\"type\":\"string\"},{\"name\":\"_intro\",\"type\":\"string\"}],\"name\":\"createPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCreatedPet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_petId\",\"type\":\"string\"}],\"name\":\"cancelSellPet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_a\",\"type\":\"string\"},{\"name\":\"_b\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}]";

    public static final String FUNC_GETPETINDEX = "getPetIndex";

    public static final String FUNC_CHANGEPETINFO = "changePetInfo";

    public static final String FUNC_CREATEUSER = "createUser";

    public static final String FUNC_GETPETOWNER = "getPetOwner";

    public static final String FUNC_GETBALANCEOFME = "getBalanceOfMe";

    public static final String FUNC_CHANGEPETOWNER = "changePetOwner";

    public static final String FUNC_SETORDERADDRESS = "setOrderAddress";

    public static final String FUNC_PAYBYADMIN = "payByAdmin";

    public static final String FUNC_GETUSERIDEN = "getUserIden";

    public static final String FUNC_SHOWPETONSELL = "showPetOnSell";

    public static final String FUNC_GETPETSTATUS = "getPetStatus";

    public static final String FUNC_GETPETBYINDEX = "getPetByIndex";

    public static final String FUNC_SELLPET = "sellPet";

    public static final String FUNC_BUYPET = "buyPet";

    public static final String FUNC_GETINTTOSTRING = "getIntToString";

    public static final String FUNC_ORDERGETPETOWNER = "orderGetPetOwner";

    public static final String FUNC_CREATEPET = "createPet";

    public static final String FUNC_GETCREATEDPET = "getCreatedPet";

    public static final String FUNC_GETBALANCE = "getBalance";

    public static final String FUNC_CANCELSELLPET = "cancelSellPet";

    public static final String FUNC_STRCONCAT = "strConcat";

    @Deprecated
    protected Market(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Market(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Market(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Market(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteCall<List> getPetIndex() {
        final Function function = new Function(FUNC_GETPETINDEX, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<TransactionReceipt> changePetInfo(String _petId, String _name, String _type, BigInteger _price, String _img, String _intro) {
        final Function function = new Function(
                FUNC_CHANGEPETINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void changePetInfo(String _petId, String _name, String _type, BigInteger _price, String _img, String _intro, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEPETINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String changePetInfoSeq(String _petId, String _name, String _type, BigInteger _price, String _img, String _intro) {
        final Function function = new Function(
                FUNC_CHANGEPETINFO, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> createUser() {
        final Function function = new Function(
                FUNC_CREATEUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void createUser(TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CREATEUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String createUserSeq() {
        final Function function = new Function(
                FUNC_CREATEUSER, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<String> getPetOwner(String _petId) {
        final Function function = new Function(FUNC_GETPETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<BigInteger> getBalanceOfMe() {
        final Function function = new Function(FUNC_GETBALANCEOFME, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> changePetOwner(String _from, String _to, String _petId, String _caller) {
        final Function function = new Function(
                FUNC_CHANGEPETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void changePetOwner(String _from, String _to, String _petId, String _caller, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CHANGEPETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String changePetOwnerSeq(String _from, String _to, String _petId, String _caller) {
        final Function function = new Function(
                FUNC_CHANGEPETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> setOrderAddress(String _orderAddress) {
        final Function function = new Function(
                FUNC_SETORDERADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_orderAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void setOrderAddress(String _orderAddress, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SETORDERADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_orderAddress)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String setOrderAddressSeq(String _orderAddress) {
        final Function function = new Function(
                FUNC_SETORDERADDRESS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_orderAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> payByAdmin(String _from, String _to, BigInteger _price, String _caller) {
        final Function function = new Function(
                FUNC_PAYBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void payByAdmin(String _from, String _to, BigInteger _price, String _caller, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_PAYBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String payByAdminSeq(String _from, String _to, BigInteger _price, String _caller) {
        final Function function = new Function(
                FUNC_PAYBYADMIN, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_from), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_to), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<Tuple2<BigInteger, String>> getUserIden() {
        final Function function = new Function(FUNC_GETUSERIDEN, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}, new TypeReference<Address>() {}));
        return new RemoteCall<Tuple2<BigInteger, String>>(
                new Callable<Tuple2<BigInteger, String>>() {
                    @Override
                    public Tuple2<BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple2<BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue());
                    }
                });
    }

    public RemoteCall<List> showPetOnSell() {
        final Function function = new Function(FUNC_SHOWPETONSELL, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Uint256>>() {}));
        return new RemoteCall<List>(
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteCall<BigInteger> getPetStatus(String _petId, String _caller) {
        final Function function = new Function(FUNC_GETPETSTATUS, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<Tuple7<String, String, BigInteger, String, BigInteger, String, String>> getPetByIndex(BigInteger _index) {
        final Function function = new Function(FUNC_GETPETBYINDEX, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_index)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint16>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint8>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteCall<Tuple7<String, String, BigInteger, String, BigInteger, String, String>>(
                new Callable<Tuple7<String, String, BigInteger, String, BigInteger, String, String>>() {
                    @Override
                    public Tuple7<String, String, BigInteger, String, BigInteger, String, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple7<String, String, BigInteger, String, BigInteger, String, String>(
                                (String) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (BigInteger) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (String) results.get(5).getValue(), 
                                (String) results.get(6).getValue());
                    }
                });
    }

    public RemoteCall<TransactionReceipt> sellPet(String _petId) {
        final Function function = new Function(
                FUNC_SELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void sellPet(String _petId, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_SELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String sellPetSeq(String _petId) {
        final Function function = new Function(
                FUNC_SELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<TransactionReceipt> buyPet(String _petId, String _time) {
        final Function function = new Function(
                FUNC_BUYPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_time)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void buyPet(String _petId, String _time, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_BUYPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_time)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String buyPetSeq(String _petId, String _time) {
        final Function function = new Function(
                FUNC_BUYPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_time)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<String> getIntToString(BigInteger _input) {
        final Function function = new Function(FUNC_GETINTTOSTRING, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.generated.Uint256(_input)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<String> orderGetPetOwner(String _petId, String _caller) {
        final Function function = new Function(FUNC_ORDERGETPETOWNER, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId), 
                new org.fisco.bcos.web3j.abi.datatypes.Address(_caller)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteCall<TransactionReceipt> createPet(String _type, BigInteger _price, String _name, String _img, String _intro) {
        final Function function = new Function(
                FUNC_CREATEPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void createPet(String _type, BigInteger _price, String _name, String _img, String _intro, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CREATEPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String createPetSeq(String _type, BigInteger _price, String _name, String _img, String _intro) {
        final Function function = new Function(
                FUNC_CREATEPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_type), 
                new org.fisco.bcos.web3j.abi.datatypes.generated.Uint16(_price), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_name), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_img), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_intro)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<BigInteger> getCreatedPet() {
        final Function function = new Function(FUNC_GETCREATEDPET, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint8>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<BigInteger> getBalance(String _address) {
        final Function function = new Function(FUNC_GETBALANCE, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Address(_address)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> cancelSellPet(String _petId) {
        final Function function = new Function(
                FUNC_CANCELSELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public void cancelSellPet(String _petId, TransactionSucCallback callback) {
        final Function function = new Function(
                FUNC_CANCELSELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        asyncExecuteTransaction(function, callback);
    }

    public String cancelSellPetSeq(String _petId) {
        final Function function = new Function(
                FUNC_CANCELSELLPET, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_petId)), 
                Collections.<TypeReference<?>>emptyList());
        return createTransactionSeq(function);
    }

    public RemoteCall<String> strConcat(String _a, String _b) {
        final Function function = new Function(FUNC_STRCONCAT, 
                Arrays.<Type>asList(new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_a), 
                new org.fisco.bcos.web3j.abi.datatypes.Utf8String(_b)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static Market load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new Market(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Market load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Market(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Market load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new Market(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Market load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Market(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Market> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Market.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<Market> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Market.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Market> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Market.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<Market> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Market.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }
}
